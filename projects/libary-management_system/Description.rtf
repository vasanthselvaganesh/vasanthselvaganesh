Library Management System in C++
Project Overview:

Welcome to the Library Management System! This is a console-based application built using C++ that helps both administrators and students manage library resources effectively. Students can easily access library data by registering or logging into their accounts, while admins have all the necessary tools to manage the books and student accounts. The system allows for adding, editing, and viewing books, managing student accounts, issuing books, and handling fines.

Key Features:
User Authentication: The system offers secure login options for both admins and students, where password protection keeps your accounts safe.
Admin Functions:

As an admin, you'll have several powerful tools at your disposal:

Add Books: Easily add new titles to the library collection.
Edit Book Details: Modify the title and author information of any book using its ISBN number.
View Book Status: Check the availability and list of all books in the library.
Access Student Information: View a list of registered students, sorted by roll number.
Check Student Balances: Look up the account balance for any student.
Student Functions:

Students can enjoy these features:

Create an Account: Register by providing your roll number, name, and an initial deposit.
View Balance: Keep an eye on your account balance anytime.
Make Deposits: Add money to your account whenever necessary.
Issue Books: Borrow books that are available for you to check out.
Account Management:

The system can accommodate up to 20 students. Opening an account requires a fee of $20, along with a $30 security deposit. Students are allowed to borrow books for $2 each for a duration of 10 days, with fines applied for any late returns according to the established rules.

Data Storage:

We utilize 2D arrays to store the information on students and books. Initially, the library holds 15 books, and each student account tracks their roll number, balance, and first name.

Implementation Details:

This application is created using C++ without involving classes, pointers, or structures. Instead, it relies on 2D arrays, along with functions, loops, if-else conditions, and switch statements to deliver its functionality. The main() function is responsible for handling user inputs, presenting choices, and running the appropriate actions based on user selections. The program continues to operate until the user chooses to exit.

